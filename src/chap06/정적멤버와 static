- 정적(static)은 '고정된'이란 의미를 가지고 있다.
- 정적 멤버는 클래스에 고정된 멤버로서 객체를 생성하지 않고 사용할 수 있는 필드와 메소드를 말한다.
1. 정적멤버 선언
- 정적 필드와 정적 메소드 선언 방법은 필드와 메소드 앞에 static 키워드를 붙이는 것이다.
public class 클래스{
	//정적 필드
	static 타입 필드 = 초기값;
	
	//정적 메소드
	static 리턴타입 메소드(매개변수선언,...){}
- 정적 필드와 정적 메소드는 클래스에 고정된 멤버이므로 클래스 로더가 클래스를 로딩해서 메소드 메모리 영역에 적재할 때 클래스별로 관리된다.
- 인스턴스 필드 vs 정적 필드 판단 기준
	- 인스턴스 필드 : 객체마다 가지고 있어야 할 데이터
	- 정적 필드 : 공용적인 데이터
- 인스턴스 메소드 vs 정적 메소드 판단 기준
	- 인스턴스 메소드 : 인스턴스 필드를 이용해서 실행해야 할 때
	- 정적 메소드 : 인스턴스 필드를 이용하지 않을 때
	
2. 정적 멤버 사용
- 클래스 이름과 함께 도트 연산자로 접근한다.
클래스.필드; 클래스.메소드(매개값,..);

3. 정적 초기화 블록
-정적 필드는 필드 선언과 동시에 초시값을 주는 것이 보통이다.
- 정적 필드의 복잡한 초기화 작업을 위해서 정적블록을 제공한다.
static {}
- 정적 블록은 클래스가 메모리로 로딩될 때 자동적으로 실행된다.
- 정적 블록은 클래스 내부에 여러개가 선언되어도 상관없다.
- 클래스가 메모리로 로딩돌 때 선언된 순서대로 실행된다.

4. 정적 메소드와 블록 선언 시 주의할 점
- 정적 메소드와 정적 블록 선언 시, 내부 인스턴스 필드나 인스턴스 메소드를 사용할 수 었고, this 키워드도 사용할 수 없다.
- 내부 인스턴스 및 메소드를 사용하고 싶으면 먼저 객체를 생성한 후 접근해야 한다.
