5.1 데이터 타입 분류
<자바 데이터 타입>
1. 기본 타입(원시 데이터:primitive type) : 정수, 실수, 문자, 논리 리터럴
- 기본 타입으로 선언된 변수는 실제 값을 젼수 안에 저장
- 스택 영역에 생성

2. 참조 타입(reference type) : 배열, 열거, 클래스, 인터페이스
- 메모리의 번지를 값으로 갖는다. 번지를 통해 객체를 참조하는 것이다.
- 힙 영역에 생성

5.1 메모리 사용 영역
<JVM이 운영체제에서 할당받은 메모리 영역>
1. 메소드(Method)영역)
- 코드에서 사용되는 클래스들을 클래스 로더로 읽는다.
- 클래스 런타임 상수출, 필드 데이터, 메소드 데이터, 메소드 코드, 생성자 코드 등으로 저장
- 메소드 영역은 JVM이 시작할 때 생성되고 모든 스레드가 공유하는 영역

2. 힙(Heap) 영역
- 객체와 배열이 생성되는 영역
- JVM 스택 영역의 번지수나 다른 객체의 필드에서 참조

3. 스택(Stack) 영역
- 각 스레드마다 하나씩 존재하며 스레드가 시작될 때 할당
- 프레임을 추가(push)하거나 제거(pop)
- 프레임 내 기본 타입 변수나 참조 타입 변수를 추가(push)하거나 제거(pop)
- 예외 발생 시 printStackTrace()

5.3 참조 변수의 ==, != 연산
- 기본 타입에서의 ==과 != 연산은 변수의 값이 같은지, 아닌지를 조사
- 참조 타입에서의 ==과 != 연산은 동일한 객체를 참조하는지, 다른 객체를 참조하는지 조사(주소 값을 비교하는 것)

5.4 null과 NullPointerException
- 참조타입 변수는 힙 영역의 객체를 참조하지 않는다는 뜻으로 null(널)값을 가질수 있다.
- null값도 초기값으로 사용할 수 있기때문에 null로 초기화된 참조 변수는 스택 영역에 생성된다.
- NullPointerException : 참조 타입 변수를 잘못 사용하면 발생 -> 참조 타입 변수가 null을 가지고 있을 경우, 참조 타입 변수는 사용할 수 없다.

5.5 String타입
- String변수에 문자열 저장
- 문자열 리터럴이 동일하다면 String객체를 공유하도록 되어 있다.
- new 연산자를 사용해서 직접 String 객체를 생성시킬 수도 있다. new 연산자는 힙 영역에 새로운 객체를 만들 때 사용하는 연산자로 객체 생성 연산자라고 한다.
  String name1 = new String("신용산");
  String name1 = new String("신용산");
  이 경우 동일한 리터럴 이라도 다른 객체로 구분한다.
 - 동일한 String 객체이건 다른 String 객체이건 상관없이 문자열만들 이뵤할 때에는 String 객체의 equals() 메소드를 사용해야 한다.
 - equals() 메소드는 원본 문자열과 매개값으로 주어진 비교 문자열이 동일한지 비교한 후 true 또는 false를 리턴한다.